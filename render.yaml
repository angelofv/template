# render.yaml

databases:
  - name: mlflow-db
    plan: free        # Postgres Free (256 Mo RAM + 256 Mo disque)

services:
  # ──────────────── MLflow Server ─────────────────
  - name: mlflow
    type: web
    env: docker
    plan: free
    dockerContext: .
    dockerfilePath: Dockerfile
    autoDeploy: true      # rebuild & redeploy on git push
    healthCheckPath: /    # GET / doit renvoyer 200 (MLflow UI)
    envVars:
      # 1) Métadonnées : Postgres géré par Render
      - key: MLFLOW_BACKEND_URI
        fromDatabase:
          name: mlflow-db
          property: connectionString
      # 2) Artefacts : bucket S3 (défini dans Settings → Secrets)
      - key: MLFLOW_S3_BUCKET
        fromSecret: MLFLOW_S3_BUCKET
      # 3) Crédentiels AWS (à saisir dans Settings → Secrets)
      - key: AWS_ACCESS_KEY_ID
        fromSecret: AWS_ACCESS_KEY_ID
      - key: AWS_SECRET_ACCESS_KEY
        fromSecret: AWS_SECRET_ACCESS_KEY
      - key: AWS_DEFAULT_REGION
        fromSecret: AWS_DEFAULT_REGION

  # ───────────── Streamlit App ────────────────────
  - name: streamlit
    type: web
    env: docker
    plan: free
    dockerContext: .
    dockerfilePath: Dockerfile
    autoDeploy: true      # rebuild & redeploy on git push
    healthCheckPath: /    # GET / doit renvoyer 200 (Streamlit renvoie 200)

    envVars:
      # On pointe Streamlit vers MLflow en interne (réseau privé Render)
      - key: MLFLOW_TRACKING_URI
        value: http://mlflow:5000
      # Si besoin d’écrire/artéfacts depuis Streamlit :
      - key: MLFLOW_S3_BUCKET
        fromSecret: MLFLOW_S3_BUCKET
      - key: AWS_ACCESS_KEY_ID
        fromSecret: AWS_ACCESS_KEY_ID
      - key: AWS_SECRET_ACCESS_KEY
        fromSecret: AWS_SECRET_ACCESS_KEY
      - key: AWS_DEFAULT_REGION
        fromSecret: AWS_DEFAULT_REGION

